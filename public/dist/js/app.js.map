{
  "version": 3,
  "sources": ["../../src/js/app.js"],
  "sourcesContent": ["const inputID = document.querySelector(\"#inputID\");\r\nconst logId = document.querySelector(\"#logId\");\r\nconst loginBtn = document.querySelector(\".loginBtn\");\r\nconst subloginBtn = document.querySelector(\".subloginBtn\");\r\nconst subsignupBtn = document.querySelector(\".subsignupBtn\");\r\nconst Home = document.querySelector(\".Home\");\r\n\r\nconst socket = new WebSocket(\"ws://localhost:8000\");\r\nsocket.addEventListener(\"open\", () => {\r\n  console.log(\"we are connected\");\r\n});\r\n\r\nsocket.addEventListener(\"message\", (event) => {\r\n  console.log(event.data);\r\n  logId.textContent = event.data;\r\n});\r\n//sending data to these server\r\nfunction sendmgs() {\r\n  socket.send(inputID.value);\r\n}\r\n\r\nloginBtn.addEventListener(\"click\", () => {\r\n  fetch(\"/user/login\", {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      // 'Authorization': 'Bearer YOUR_TOKEN',\r\n    },\r\n  })\r\n    .then((response) => response.text())\r\n    .then((data) => {\r\n      if (data) {\r\n        Home.innerHTML = data;\r\n        console.log(data + \"hererererererererer\");\r\n      }\r\n    })\r\n    .catch((error) => console.log(error));\r\n});\r\n\r\n//Login\r\n/* document.addEventListener(\"DOMContentLoaded\", () => {\r\n  subloginBtn.addEventListener(\"click\", () => {\r\n    console.log(\"logined in\");\r\n  });\r\n});\r\n */\r\n//this is useful for dynamically render element to be used in document.something\r\n//LOGIN\r\nHome.addEventListener(\"click\", function (event) {\r\n  if (event.target.matches(\".subloginBtn\")) {\r\n    const emailInput = document.querySelector(\".emailInput\").value;\r\n    const passwordInput = document.querySelector(\".passwordInput\").value;\r\n    const erPlank = document.querySelector(\".erPlank\");\r\n\r\n    //Logins validfications\r\n    const data = {\r\n      email: emailInput,\r\n      password: passwordInput,\r\n    };\r\n    console.log(data);\r\n\r\n    fetch(\"/user/verificaftion\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        // 'Authorization': 'Bearer YOUR_TOKEN',\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.erMgs) {\r\n          erPlank.innerHTML = data.erMgs;\r\n          erPlank.style.display = \"block\";\r\n          setTimeout(() => {\r\n            erPlank.style.display = \"none\";\r\n          }, 3000);\r\n        } else if (data.paswdMgs) {\r\n          erPlank.innerHTML = data.paswdMgs;\r\n          erPlank.style.display = \"block\";\r\n          setTimeout(() => {\r\n            erPlank.style.display = \"none\";\r\n          }, 6000);\r\n        } /* else if (data.redirMgs === true) {\r\n          console.log(\"page redirect\");\r\n        } */ /* else {\r\n          erPlank.innerHTML = \"Failed, Please reload the page and try again!\";\r\n          erPlank.style.display = \"block\";\r\n          setTimeout(() => {\r\n            erPlank.style.display = \"none\";\r\n          }, 3000);\r\n          console.log(\"correct p\");\r\n        } */\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }\r\n});\r\n\r\n//SIGNUP PAGE\r\nHome.addEventListener(\"click\", (event) => {\r\n  if (event.target.matches(\".siginingupBtn\")) {\r\n    fetch(\"/user/sgnpg\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        // 'Authorization': 'Bearer YOUR_TOKEN',\r\n      },\r\n    })\r\n      .then((response) => response.text())\r\n      .then((data) => {\r\n        Home.innerHTML = data;\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }\r\n});\r\n\r\n//SIGNUP\r\nHome.addEventListener(\"click\", function (event) {\r\n  if (event.target.matches(\".subsignupBtn\")) {\r\n    const signupusernameInput = document.querySelector(\r\n      \".signupusernameInput\"\r\n    ).value;\r\n    const signupemailInput = document.querySelector(\".signupemailInput\").value;\r\n    const signuppasswordInput = document.querySelector(\r\n      \".signuppasswordInput\"\r\n    ).value;\r\n    const ersignupPlank = document.querySelector(\".ersignupPlank\");\r\n\r\n    //Logins validfications\r\n    const data = {\r\n      username: signupusernameInput,\r\n      email: signupemailInput,\r\n      password: signuppasswordInput,\r\n    };\r\n    console.log(data);\r\n\r\n    fetch(\"/user/registration\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        // 'Authorization': 'Bearer YOUR_TOKEN',\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.erMgs) {\r\n          ersignupPlank.innerHTML = data.erMgs;\r\n          ersignupPlank.style.display = \"block\";\r\n          setTimeout(() => {\r\n            ersignupPlank.style.display = \"none\";\r\n          }, 3000);\r\n        } else if (data.paswdMgs) {\r\n          ersignupPlank.innerHTML = data.paswdMgs;\r\n          ersignupPlank.style.display = \"block\";\r\n          setTimeout(() => {\r\n            ersignupPlank.style.display = \"none\";\r\n          }, 6000);\r\n        } else if (data.crtAccount === true) {\r\n          console.log(data.usr, data.usrP + \"herererer\");\r\n          document.cookie = `usr=${data.usr}` + \";path=/\";\r\n          document.cookie = `usrP=${data.usrP}` + \";path=/\";\r\n          /*           document.cookie = \"usr=data.usr\" + \";path=/\";\r\n\r\n          getCookie=(cookieName)=>{\r\n         let cookies = document.cookie.split(\"; \");\r\n\r\n            for (let i = 0; i < cookies.length; i++) {\r\n              let cookie = cookies[i];\r\n              let [name, value] = cookie.split(\"=\");\r\n\r\n              if (name === cookieName) {\r\n                return decodeURIComponent(value);\r\n              }\r\n            }\r\n\r\n            return null;\r\n          }\r\n\r\n          let username = getCookie(\"username\");\r\n          console.log(username);\r\n        */\r\n        }\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }\r\n});\r\n"],
  "mappings": "AAAA,IAAMA,EAAU,SAAS,cAAc,UAAU,EAC3CC,EAAQ,SAAS,cAAc,QAAQ,EACvCC,EAAW,SAAS,cAAc,WAAW,EAC7CC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAe,SAAS,cAAc,eAAe,EACrDC,EAAO,SAAS,cAAc,OAAO,EAErCC,EAAS,IAAI,UAAU,qBAAqB,EAClDA,EAAO,iBAAiB,OAAQ,IAAM,CACpC,QAAQ,IAAI,kBAAkB,CAChC,CAAC,EAEDA,EAAO,iBAAiB,UAAYC,GAAU,CAC5C,QAAQ,IAAIA,EAAM,IAAI,EACtBN,EAAM,YAAcM,EAAM,IAC5B,CAAC,EAMDC,EAAS,iBAAiB,QAAS,IAAM,CACvC,MAAM,cAAe,CACnB,OAAQ,MACR,QAAS,CACP,eAAgB,kBAElB,CACF,CAAC,EACE,KAAMC,GAAaA,EAAS,KAAK,CAAC,EAClC,KAAMC,GAAS,CACVA,IACFC,EAAK,UAAYD,EACjB,QAAQ,IAAIA,EAAO,qBAAqB,EAE5C,CAAC,EACA,MAAOE,GAAU,QAAQ,IAAIA,CAAK,CAAC,CACxC,CAAC,EAWDD,EAAK,iBAAiB,QAAS,SAAUE,EAAO,CAC9C,GAAIA,EAAM,OAAO,QAAQ,cAAc,EAAG,CACxC,IAAMC,EAAa,SAAS,cAAc,aAAa,EAAE,MACnDC,EAAgB,SAAS,cAAc,gBAAgB,EAAE,MACzDC,EAAU,SAAS,cAAc,UAAU,EAG3CN,EAAO,CACX,MAAOI,EACP,SAAUC,CACZ,EACA,QAAQ,IAAIL,CAAI,EAEhB,MAAM,sBAAuB,CAC3B,OAAQ,OACR,QAAS,CACP,eAAgB,kBAElB,EACA,KAAM,KAAK,UAAUA,CAAI,CAC3B,CAAC,EACE,KAAMD,GAAaA,EAAS,KAAK,CAAC,EAClC,KAAMC,GAAS,CACVA,EAAK,OACPM,EAAQ,UAAYN,EAAK,MACzBM,EAAQ,MAAM,QAAU,QACxB,WAAW,IAAM,CACfA,EAAQ,MAAM,QAAU,MAC1B,EAAG,GAAI,GACEN,EAAK,WACdM,EAAQ,UAAYN,EAAK,SACzBM,EAAQ,MAAM,QAAU,QACxB,WAAW,IAAM,CACfA,EAAQ,MAAM,QAAU,MAC1B,EAAG,GAAI,EAWX,CAAC,EACA,MAAOJ,GAAU,QAAQ,IAAIA,CAAK,CAAC,CACxC,CACF,CAAC,EAGDD,EAAK,iBAAiB,QAAUE,GAAU,CACpCA,EAAM,OAAO,QAAQ,gBAAgB,GACvC,MAAM,cAAe,CACnB,OAAQ,MACR,QAAS,CACP,eAAgB,kBAElB,CACF,CAAC,EACE,KAAMJ,GAAaA,EAAS,KAAK,CAAC,EAClC,KAAMC,GAAS,CACdC,EAAK,UAAYD,CACnB,CAAC,EACA,MAAOE,GAAU,QAAQ,IAAIA,CAAK,CAAC,CAE1C,CAAC,EAGDD,EAAK,iBAAiB,QAAS,SAAUE,EAAO,CAC9C,GAAIA,EAAM,OAAO,QAAQ,eAAe,EAAG,CACzC,IAAMI,EAAsB,SAAS,cACnC,sBACF,EAAE,MACIC,EAAmB,SAAS,cAAc,mBAAmB,EAAE,MAC/DC,EAAsB,SAAS,cACnC,sBACF,EAAE,MACIC,EAAgB,SAAS,cAAc,gBAAgB,EAGvDV,EAAO,CACX,SAAUO,EACV,MAAOC,EACP,SAAUC,CACZ,EACA,QAAQ,IAAIT,CAAI,EAEhB,MAAM,qBAAsB,CAC1B,OAAQ,OACR,QAAS,CACP,eAAgB,kBAElB,EACA,KAAM,KAAK,UAAUA,CAAI,CAC3B,CAAC,EACE,KAAMD,GAAaA,EAAS,KAAK,CAAC,EAClC,KAAMC,GAAS,CACVA,EAAK,OACPU,EAAc,UAAYV,EAAK,MAC/BU,EAAc,MAAM,QAAU,QAC9B,WAAW,IAAM,CACfA,EAAc,MAAM,QAAU,MAChC,EAAG,GAAI,GACEV,EAAK,UACdU,EAAc,UAAYV,EAAK,SAC/BU,EAAc,MAAM,QAAU,QAC9B,WAAW,IAAM,CACfA,EAAc,MAAM,QAAU,MAChC,EAAG,GAAI,GACEV,EAAK,aAAe,KAC7B,QAAQ,IAAIA,EAAK,IAAKA,EAAK,KAAO,WAAW,EAC7C,SAAS,OAAS,OAAOA,EAAK,GAAG,UACjC,SAAS,OAAS,QAAQA,EAAK,IAAI,UAsBvC,CAAC,EACA,MAAOE,GAAU,QAAQ,IAAIA,CAAK,CAAC,CACxC,CACF,CAAC",
  "names": ["inputID", "logId", "loginBtn", "subloginBtn", "subsignupBtn", "Home", "socket", "event", "loginBtn", "response", "data", "Home", "error", "event", "emailInput", "passwordInput", "erPlank", "signupusernameInput", "signupemailInput", "signuppasswordInput", "ersignupPlank"]
}
