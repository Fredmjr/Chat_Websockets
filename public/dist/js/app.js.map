{
  "version": 3,
  "sources": ["../../src/js/app.js"],
  "sourcesContent": ["const inputID = document.querySelector(\"#inputID\");\r\nconst logId = document.querySelector(\"#logId\");\r\nconst loginBtn = document.querySelector(\".loginBtn\");\r\nconst subloginBtn = document.querySelector(\".subloginBtn\");\r\nconst Home = document.querySelector(\".Home\");\r\n\r\nconst socket = new WebSocket(\"ws://localhost:8000\");\r\nsocket.addEventListener(\"open\", () => {\r\n  console.log(\"we are connected\");\r\n});\r\n\r\nsocket.addEventListener(\"message\", (event) => {\r\n  console.log(event.data);\r\n  logId.textContent = event.data;\r\n});\r\n//sending data to these server\r\nfunction sendmgs() {\r\n  socket.send(inputID.value);\r\n}\r\n\r\nloginBtn.addEventListener(\"click\", () => {\r\n  fetch(\"/user/login\", {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      // 'Authorization': 'Bearer YOUR_TOKEN',\r\n    },\r\n  })\r\n    .then((response) => response.text())\r\n    .then((data) => {\r\n      Home.innerHTML = data;\r\n    })\r\n    .catch((error) => console.log(error));\r\n});\r\n\r\n//Login\r\n/* document.addEventListener(\"DOMContentLoaded\", () => {\r\n  subloginBtn.addEventListener(\"click\", () => {\r\n    console.log(\"logined in\");\r\n  });\r\n});\r\n */\r\n//this is useful for dynamically render element to be used in document.something\r\nHome.addEventListener(\"click\", function (event) {\r\n  if (event.target.matches(\".subloginBtn\")) {\r\n    const usernameInput = document.querySelector(\".usernameInput\").value;\r\n    const emailInput = document.querySelector(\".emailInput\").value;\r\n    const passwordInput = document.querySelector(\".passwordInput\").value;\r\n    const erPlank = document.querySelector(\".erPlank\");\r\n\r\n    //Logins validfications\r\n    const data = {\r\n      username: usernameInput,\r\n      email: emailInput,\r\n      password: passwordInput,\r\n    };\r\n    console.log(data);\r\n\r\n    fetch(\"/user/verification\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        // 'Authorization': 'Bearer YOUR_TOKEN',\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.erMgs) {\r\n          erPlank.innerHTML = data.erMgs;\r\n          erPlank.style.display = \"block\";\r\n          setTimeout(() => {\r\n            erPlank.style.display = \"none\";\r\n          }, 3000);\r\n        } else if (data.paswdMgs) {\r\n          erPlank.innerHTML = data.paswdMgs;\r\n          erPlank.style.display = \"block\";\r\n          setTimeout(() => {\r\n            erPlank.style.display = \"none\";\r\n          }, 6000);\r\n        } else if (data.redirMgs === true) {\r\n          console.log(\"page redirect\");\r\n        } else {\r\n          erPlank.innerHTML = \"Failed, Please reload the page and try again!\";\r\n          erPlank.style.display = \"block\";\r\n          setTimeout(() => {\r\n            erPlank.style.display = \"none\";\r\n          }, 3000);\r\n          console.log(\"correct p\");\r\n        }\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }\r\n});\r\n"],
  "mappings": "AAAA,IAAMA,EAAU,SAAS,cAAc,UAAU,EAC3CC,EAAQ,SAAS,cAAc,QAAQ,EACvCC,EAAW,SAAS,cAAc,WAAW,EAC7CC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAO,SAAS,cAAc,OAAO,EAErCC,EAAS,IAAI,UAAU,qBAAqB,EAClDA,EAAO,iBAAiB,OAAQ,IAAM,CACpC,QAAQ,IAAI,kBAAkB,CAChC,CAAC,EAEDA,EAAO,iBAAiB,UAAYC,GAAU,CAC5C,QAAQ,IAAIA,EAAM,IAAI,EACtBL,EAAM,YAAcK,EAAM,IAC5B,CAAC,EAMDC,EAAS,iBAAiB,QAAS,IAAM,CACvC,MAAM,cAAe,CACnB,OAAQ,MACR,QAAS,CACP,eAAgB,kBAElB,CACF,CAAC,EACE,KAAMC,GAAaA,EAAS,KAAK,CAAC,EAClC,KAAMC,GAAS,CACdC,EAAK,UAAYD,CACnB,CAAC,EACA,MAAOE,GAAU,QAAQ,IAAIA,CAAK,CAAC,CACxC,CAAC,EAUDD,EAAK,iBAAiB,QAAS,SAAUE,EAAO,CAC9C,GAAIA,EAAM,OAAO,QAAQ,cAAc,EAAG,CACxC,IAAMC,EAAgB,SAAS,cAAc,gBAAgB,EAAE,MACzDC,EAAa,SAAS,cAAc,aAAa,EAAE,MACnDC,EAAgB,SAAS,cAAc,gBAAgB,EAAE,MACzDC,EAAU,SAAS,cAAc,UAAU,EAG3CP,EAAO,CACX,SAAUI,EACV,MAAOC,EACP,SAAUC,CACZ,EACA,QAAQ,IAAIN,CAAI,EAEhB,MAAM,qBAAsB,CAC1B,OAAQ,OACR,QAAS,CACP,eAAgB,kBAElB,EACA,KAAM,KAAK,UAAUA,CAAI,CAC3B,CAAC,EACE,KAAMD,GAAaA,EAAS,KAAK,CAAC,EAClC,KAAMC,GAAS,CACVA,EAAK,OACPO,EAAQ,UAAYP,EAAK,MACzBO,EAAQ,MAAM,QAAU,QACxB,WAAW,IAAM,CACfA,EAAQ,MAAM,QAAU,MAC1B,EAAG,GAAI,GACEP,EAAK,UACdO,EAAQ,UAAYP,EAAK,SACzBO,EAAQ,MAAM,QAAU,QACxB,WAAW,IAAM,CACfA,EAAQ,MAAM,QAAU,MAC1B,EAAG,GAAI,GACEP,EAAK,WAAa,GAC3B,QAAQ,IAAI,eAAe,GAE3BO,EAAQ,UAAY,gDACpBA,EAAQ,MAAM,QAAU,QACxB,WAAW,IAAM,CACfA,EAAQ,MAAM,QAAU,MAC1B,EAAG,GAAI,EACP,QAAQ,IAAI,WAAW,EAE3B,CAAC,EACA,MAAOL,GAAU,QAAQ,IAAIA,CAAK,CAAC,CACxC,CACF,CAAC",
  "names": ["inputID", "logId", "loginBtn", "subloginBtn", "Home", "socket", "event", "loginBtn", "response", "data", "Home", "error", "event", "usernameInput", "emailInput", "passwordInput", "erPlank"]
}
