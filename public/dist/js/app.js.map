{
  "version": 3,
  "sources": ["../../src/js/app.js"],
  "sourcesContent": ["const inputID = document.querySelector(\"#inputID\");\r\nconst logId = document.querySelector(\"#logId\");\r\nconst loginBtn = document.querySelector(\".loginBtn\");\r\nconst subloginBtn = document.querySelector(\".subloginBtn\");\r\nconst subsignupBtn = document.querySelector(\".subsignupBtn\");\r\nconst Home = document.querySelector(\".Home\");\r\nconst srchErmgs = document.querySelector(\".srchErmgs\");\r\nconst srchpgBtn = document.querySelector(\".srchpgBtn\");\r\n\r\nconst socket = new WebSocket(\"ws://localhost:8000\");\r\nsocket.addEventListener(\"open\", () => {\r\n  console.log(\"we are connected\");\r\n});\r\n\r\nsocket.addEventListener(\"message\", (event) => {\r\n  console.log(event.data);\r\n  logId.textContent = event.data;\r\n});\r\n//sending data to these server\r\nfunction sendmgs() {\r\n  socket.send(inputID.value);\r\n}\r\n\r\nHome.addEventListener(\"click\", function (event) {\r\n  if (event.target.matches(\".loginBtn\")) {\r\n    fetch(\"/user/login\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        // 'Authorization': 'Bearer YOUR_TOKEN',\r\n      },\r\n    })\r\n      .then((response) => response.text())\r\n      .then((data) => {\r\n        if (data) {\r\n          Home.innerHTML = data;\r\n        }\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }\r\n});\r\n\r\n//Login\r\n/* document.addEventListener(\"DOMContentLoaded\", () => {\r\n  subloginBtn.addEventListener(\"click\", () => {\r\n    console.log(\"logined in\");\r\n  });\r\n});\r\n */\r\n//this is useful for dynamically render element to be used in document.something\r\n//LOGIN\r\nHome.addEventListener(\"click\", function (event) {\r\n  if (event.target.matches(\".subloginBtn\")) {\r\n    const emailInput = document.querySelector(\".emailInput\").value;\r\n    const passwordInput = document.querySelector(\".passwordInput\").value;\r\n    const erPlank = document.querySelector(\".erPlank\");\r\n\r\n    //Logins validfications\r\n    const data = {\r\n      email: emailInput,\r\n      password: passwordInput,\r\n    };\r\n    console.log(data);\r\n\r\n    fetch(\"/user/verificaftion\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        // 'Authorization': 'Bearer YOUR_TOKEN',\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.erMgs) {\r\n          erPlank.innerHTML = data.erMgs;\r\n          erPlank.style.display = \"block\";\r\n          setTimeout(() => {\r\n            erPlank.style.display = \"none\";\r\n          }, 3000);\r\n        } else if (data.paswdMgs) {\r\n          erPlank.innerHTML = data.paswdMgs;\r\n          erPlank.style.display = \"block\";\r\n          setTimeout(() => {\r\n            erPlank.style.display = \"none\";\r\n          }, 6000);\r\n        } /* else if (data.redirMgs === true) {\r\n          console.log(\"page redirect\");\r\n        } */ /* else {\r\n          erPlank.innerHTML = \"Failed, Please reload the page and try again!\";\r\n          erPlank.style.display = \"block\";\r\n          setTimeout(() => {\r\n            erPlank.style.display = \"none\";\r\n          }, 3000);\r\n          console.log(\"correct p\");\r\n        } */\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }\r\n});\r\n\r\n//SIGNUP PAGE\r\nHome.addEventListener(\"click\", (event) => {\r\n  if (event.target.matches(\".siginingupBtn\")) {\r\n    fetch(\"/user/sgnpg\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        // 'Authorization': 'Bearer YOUR_TOKEN',\r\n      },\r\n    })\r\n      .then((response) => response.text())\r\n      .then((data) => {\r\n        Home.innerHTML = data;\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }\r\n});\r\n\r\n//SIGNUP\r\nHome.addEventListener(\"click\", function (event) {\r\n  if (event.target.matches(\".subsignupBtn\")) {\r\n    const signupusernameInput = document.querySelector(\r\n      \".signupusernameInput\"\r\n    ).value;\r\n    const signupemailInput = document.querySelector(\".signupemailInput\").value;\r\n    const signuppasswordInput = document.querySelector(\r\n      \".signuppasswordInput\"\r\n    ).value;\r\n    const ersignupPlank = document.querySelector(\".ersignupPlank\");\r\n\r\n    //Logins validfications\r\n    const data = {\r\n      username: signupusernameInput,\r\n      email: signupemailInput,\r\n      password: signuppasswordInput,\r\n    };\r\n    console.log(data);\r\n\r\n    fetch(\"/user/registration\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        // 'Authorization': 'Bearer YOUR_TOKEN',\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.erMgs) {\r\n          ersignupPlank.innerHTML = data.erMgs;\r\n          ersignupPlank.style.display = \"block\";\r\n          setTimeout(() => {\r\n            ersignupPlank.style.display = \"none\";\r\n          }, 3000);\r\n        } else if (data.paswdMgs) {\r\n          ersignupPlank.innerHTML = data.paswdMgs;\r\n          ersignupPlank.style.display = \"block\";\r\n          setTimeout(() => {\r\n            ersignupPlank.style.display = \"none\";\r\n          }, 6000);\r\n        } else if (data.crtAccount === true) {\r\n          console.log(data.usr, data.usrP + \"herererer\");\r\n          document.cookie = `usr=${data.usr}` + \";path=/\";\r\n          document.cookie = `usrP=${data.usrP}` + \";path=/\";\r\n          /*           document.cookie = \"usr=data.usr\" + \";path=/\";\r\n\r\n          getCookie=(cookieName)=>{\r\n         let cookies = document.cookie.split(\"; \");\r\n\r\n            for (let i = 0; i < cookies.length; i++) {\r\n              let cookie = cookies[i];\r\n              let [name, value] = cookie.split(\"=\");\r\n\r\n              if (name === cookieName) {\r\n                return decodeURIComponent(value);\r\n              }\r\n            }\r\n\r\n            return null;\r\n          }\r\n\r\n          let username = getCookie(\"username\");\r\n          console.log(username);\r\n        */\r\n        }\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }\r\n});\r\n\r\n//search user\r\nHome.addEventListener(\"click\", function (event) {\r\n  if (event.target.matches(\".fndactBtn\")) {\r\n    const fndactInput = document.querySelector(\".fndactInput\");\r\n    const usrPnl = document.querySelector(\".usrPnl\");\r\n    let fndVal = fndactInput.value;\r\n    const data = {\r\n      srchVal: fndVal,\r\n    };\r\n    console.log(\"data\");\r\n\r\n    fetch(\"/user/qryusr\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        // 'Authorization': 'Bearer YOUR_TOKEN',\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((response) => response.text())\r\n      .then((data) => {\r\n        /* if (data) {\r\n          srchErmgs.textContent = data.erMgs;\r\n        } */\r\n        usrPnl.innerHTML = data;\r\n        console.log(data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }\r\n});\r\n\r\n/* Home.addEventListener(\"click\", function (event) {\r\n  if (event.target.matches(\".fndactBtn\")) {\r\n    const fndactInput = document.querySelector(\".fndactInput\");\r\n    let fndVal = fndactInput.value;\r\n    console.log(fndVal);\r\n    if (fndVal === \"\") {\r\n      srchErmgs.textContent = \"\"; */\r\n//styes block below has issues with esbuild\r\n/* srchErmgs.style.display = \"block\"; */\r\n/*       setTimeout(() => {\r\n        srchErmgs.style.display = \"none\";\r\n      }, 2000);\r\n    } else if (fndVal !== \"\") {\r\n       const data = {\r\n         srchVal: fndVal,\r\n       };\r\n      \r\n\r\n      fetch(\"/user/qryusr\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          // 'Authorization': 'Bearer YOUR_TOKEN',\r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n        .then((response) => response.text())\r\n        .then((data) => {\r\n          if (data) {\r\n            Home.innerHTML = data;\r\n          }\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n  }\r\n}); */\r\n\r\nHome.addEventListener(\"click\", function (event) {\r\n  if (event.target.matches(\".srchpgBtn\")) {\r\n    fetch(\"/user/qrysrchpg\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        // 'Authorization': 'Bearer YOUR_TOKEN',\r\n      },\r\n    })\r\n      .then((response) => response.text())\r\n      .then((data) => {\r\n        Home.innerHTML = data;\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }\r\n});\r\n"],
  "mappings": "AAAA,IAAMA,EAAU,SAAS,cAAc,UAAU,EAC3CC,EAAQ,SAAS,cAAc,QAAQ,EACvCC,EAAW,SAAS,cAAc,WAAW,EAC7CC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAe,SAAS,cAAc,eAAe,EACrDC,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAY,SAAS,cAAc,YAAY,EAC/CC,EAAY,SAAS,cAAc,YAAY,EAE/CC,EAAS,IAAI,UAAU,qBAAqB,EAClDA,EAAO,iBAAiB,OAAQ,IAAM,CACpC,QAAQ,IAAI,kBAAkB,CAChC,CAAC,EAEDA,EAAO,iBAAiB,UAAYC,GAAU,CAC5C,QAAQ,IAAIA,EAAM,IAAI,EACtBR,EAAM,YAAcQ,EAAM,IAC5B,CAAC,EAMDC,EAAK,iBAAiB,QAAS,SAAUC,EAAO,CAC1CA,EAAM,OAAO,QAAQ,WAAW,GAClC,MAAM,cAAe,CACnB,OAAQ,MACR,QAAS,CACP,eAAgB,kBAElB,CACF,CAAC,EACE,KAAMC,GAAaA,EAAS,KAAK,CAAC,EAClC,KAAMC,GAAS,CACVA,IACFH,EAAK,UAAYG,EAErB,CAAC,EACA,MAAOC,GAAU,QAAQ,IAAIA,CAAK,CAAC,CAE1C,CAAC,EAWDJ,EAAK,iBAAiB,QAAS,SAAUC,EAAO,CAC9C,GAAIA,EAAM,OAAO,QAAQ,cAAc,EAAG,CACxC,IAAMI,EAAa,SAAS,cAAc,aAAa,EAAE,MACnDC,EAAgB,SAAS,cAAc,gBAAgB,EAAE,MACzDC,EAAU,SAAS,cAAc,UAAU,EAG3CJ,EAAO,CACX,MAAOE,EACP,SAAUC,CACZ,EACA,QAAQ,IAAIH,CAAI,EAEhB,MAAM,sBAAuB,CAC3B,OAAQ,OACR,QAAS,CACP,eAAgB,kBAElB,EACA,KAAM,KAAK,UAAUA,CAAI,CAC3B,CAAC,EACE,KAAMD,GAAaA,EAAS,KAAK,CAAC,EAClC,KAAMC,GAAS,CACVA,EAAK,OACPI,EAAQ,UAAYJ,EAAK,MACzBI,EAAQ,MAAM,QAAU,QACxB,WAAW,IAAM,CACfA,EAAQ,MAAM,QAAU,MAC1B,EAAG,GAAI,GACEJ,EAAK,WACdI,EAAQ,UAAYJ,EAAK,SACzBI,EAAQ,MAAM,QAAU,QACxB,WAAW,IAAM,CACfA,EAAQ,MAAM,QAAU,MAC1B,EAAG,GAAI,EAWX,CAAC,EACA,MAAOH,GAAU,QAAQ,IAAIA,CAAK,CAAC,CACxC,CACF,CAAC,EAGDJ,EAAK,iBAAiB,QAAUC,GAAU,CACpCA,EAAM,OAAO,QAAQ,gBAAgB,GACvC,MAAM,cAAe,CACnB,OAAQ,MACR,QAAS,CACP,eAAgB,kBAElB,CACF,CAAC,EACE,KAAMC,GAAaA,EAAS,KAAK,CAAC,EAClC,KAAMC,GAAS,CACdH,EAAK,UAAYG,CACnB,CAAC,EACA,MAAOC,GAAU,QAAQ,IAAIA,CAAK,CAAC,CAE1C,CAAC,EAGDJ,EAAK,iBAAiB,QAAS,SAAUC,EAAO,CAC9C,GAAIA,EAAM,OAAO,QAAQ,eAAe,EAAG,CACzC,IAAMO,EAAsB,SAAS,cACnC,sBACF,EAAE,MACIC,EAAmB,SAAS,cAAc,mBAAmB,EAAE,MAC/DC,EAAsB,SAAS,cACnC,sBACF,EAAE,MACIC,EAAgB,SAAS,cAAc,gBAAgB,EAGvDR,EAAO,CACX,SAAUK,EACV,MAAOC,EACP,SAAUC,CACZ,EACA,QAAQ,IAAIP,CAAI,EAEhB,MAAM,qBAAsB,CAC1B,OAAQ,OACR,QAAS,CACP,eAAgB,kBAElB,EACA,KAAM,KAAK,UAAUA,CAAI,CAC3B,CAAC,EACE,KAAMD,GAAaA,EAAS,KAAK,CAAC,EAClC,KAAMC,GAAS,CACVA,EAAK,OACPQ,EAAc,UAAYR,EAAK,MAC/BQ,EAAc,MAAM,QAAU,QAC9B,WAAW,IAAM,CACfA,EAAc,MAAM,QAAU,MAChC,EAAG,GAAI,GACER,EAAK,UACdQ,EAAc,UAAYR,EAAK,SAC/BQ,EAAc,MAAM,QAAU,QAC9B,WAAW,IAAM,CACfA,EAAc,MAAM,QAAU,MAChC,EAAG,GAAI,GACER,EAAK,aAAe,KAC7B,QAAQ,IAAIA,EAAK,IAAKA,EAAK,KAAO,WAAW,EAC7C,SAAS,OAAS,OAAOA,EAAK,GAAG,UACjC,SAAS,OAAS,QAAQA,EAAK,IAAI,UAsBvC,CAAC,EACA,MAAOC,GAAU,QAAQ,IAAIA,CAAK,CAAC,CACxC,CACF,CAAC,EAGDJ,EAAK,iBAAiB,QAAS,SAAUC,EAAO,CAC9C,GAAIA,EAAM,OAAO,QAAQ,YAAY,EAAG,CACtC,IAAMW,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAS,SAAS,cAAc,SAAS,EAEzCV,EAAO,CACX,QAFWS,EAAY,KAGzB,EACA,QAAQ,IAAI,MAAM,EAElB,MAAM,eAAgB,CACpB,OAAQ,OACR,QAAS,CACP,eAAgB,kBAElB,EACA,KAAM,KAAK,UAAUT,CAAI,CAC3B,CAAC,EACE,KAAMD,GAAaA,EAAS,KAAK,CAAC,EAClC,KAAMC,GAAS,CAIdU,EAAO,UAAYV,EACnB,QAAQ,IAAIA,CAAI,CAClB,CAAC,EACA,MAAOC,GAAU,QAAQ,IAAIA,CAAK,CAAC,CACxC,CACF,CAAC,EAuCDJ,EAAK,iBAAiB,QAAS,SAAUC,EAAO,CAC1CA,EAAM,OAAO,QAAQ,YAAY,GACnC,MAAM,kBAAmB,CACvB,OAAQ,MACR,QAAS,CACP,eAAgB,kBAElB,CACF,CAAC,EACE,KAAMC,GAAaA,EAAS,KAAK,CAAC,EAClC,KAAMC,GAAS,CACdH,EAAK,UAAYG,CACnB,CAAC,EACA,MAAOC,GAAU,QAAQ,IAAIA,CAAK,CAAC,CAE1C,CAAC",
  "names": ["inputID", "logId", "loginBtn", "subloginBtn", "subsignupBtn", "Home", "srchErmgs", "srchpgBtn", "socket", "event", "Home", "event", "response", "data", "error", "emailInput", "passwordInput", "erPlank", "signupusernameInput", "signupemailInput", "signuppasswordInput", "ersignupPlank", "fndactInput", "usrPnl"]
}
