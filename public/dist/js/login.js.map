{
  "version": 3,
  "sources": ["../../src/js/login.js"],
  "sourcesContent": ["// User auto login\r\n(autolg = () => {\r\n  console.log(\"auto loging\");\r\n  autockie = (elem) => {\r\n    let ckies = document.cookie.split(\"; \");\r\n    for (let i = 0; i < ckies.length; i++) {\r\n      let cookie = ckies[i];\r\n      let [name, value] = cookie.split(\"=\");\r\n      if (name === elem) {\r\n        return decodeURIComponent(value);\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  let usrckie = autockie(\"usr\");\r\n  const ckieObj = {\r\n    ckie: usrckie,\r\n  };\r\n  console.log(usrckie);\r\n\r\n  fetch(\"/user/autlg\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      // 'Authorization': 'Bearer YOUR_TOKEN',\r\n    },\r\n    body: JSON.stringify(ckieObj),\r\n  })\r\n    .then((response) => response.text())\r\n    .then((data) => {\r\n      document.body.innerHTML = data;\r\n    })\r\n    .catch((error) => console.log(error));\r\n})();\r\n\r\n//DOCUMENT DOM MUTATION OBSERVER\r\n//body DOM mutation observer\r\nconst bodyDOM = document.querySelector(\"body\");\r\nconst obsrvrDOM = new MutationObserver((mutations) => {\r\n  mutations.forEach((mutation) => {\r\n    mutation.addedNodes.forEach((node) => {\r\n      const nodeloginPage = node.matches?.(\".loginPage\")\r\n        ? node\r\n        : node.querySelector?.(\".loginPage\");\r\n\r\n      const nodeemailInput = node.matches?.(\".emailInput\")\r\n        ? node\r\n        : node.querySelector?.(\".emailInput\");\r\n\r\n      const nodepasswordInput = node.matches?.(\".passwordInput\")\r\n        ? node\r\n        : node.querySelector?.(\".passwordInput\");\r\n\r\n      const nodeerPlank = node.matches?.(\".erPlank\")\r\n        ? node\r\n        : node.querySelector?.(\".erPlank\");\r\n\r\n      if (nodeloginPage) {\r\n        //loginPage element delegtion observer (for click of subloginBtn)\r\n        nodeloginPage.addEventListener(\"click\", function (event) {\r\n          if (event.target.matches(\".subloginBtn\")) {\r\n            console.log(\"doc.body mutation works!\");\r\n            const plam = true;\r\n            if (plam === true || plam !== false) {\r\n              const dataObj = {\r\n                email: nodeemailInput.value,\r\n                password: nodepasswordInput.value,\r\n              };\r\n              console.log(dataObj);\r\n\r\n              fetch(\"/user/verificaftion\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"Content-Type\": \"application/json\",\r\n                  // 'Authorization': 'Bearer YOUR_TOKEN',\r\n                },\r\n                body: JSON.stringify(dataObj),\r\n              })\r\n                .then((response) => response.json())\r\n                .then((data) => {\r\n                  if (data.erMgs) {\r\n                    nodeerPlank.textContent = data.erMgs;\r\n                    setTimeout(() => {\r\n                      nodeerPlank.style.display = \"none\";\r\n                    }, 1000);\r\n                    nodeerPlank.style.display = \"block\";\r\n                    console.log(data.erMgs);\r\n                  } else if (data.paswdMgs) {\r\n                    nodeerPlank.textContent = data.paswdMgs;\r\n                    nodeerPlank.style.display = \"block\";\r\n                    setTimeout(() => {\r\n                      nodeerPlank.style.display = \"none\";\r\n                    }, 2000);\r\n                    console.log(data.paswdMgs);\r\n                  } else if (data.ifRedir) {\r\n                    const setnm = (document.cookie =\r\n                      `usr=${data.usr}` + \";path=/\");\r\n                    const setprt = (document.cookie =\r\n                      `usrP=${data.usrP}` + \";path=/\");\r\n\r\n                    if (setnm && setprt) {\r\n                      console.log(\r\n                        `cookie set name: ${data.usr} port & ${data.usrP}`\r\n                      );\r\n                      setTimeout(() => {\r\n                        window.location.reload();\r\n                      }, 1000);\r\n                    }\r\n                  }\r\n                })\r\n                .catch((error) => console.log(error));\r\n            }\r\n          }\r\n        });\r\n      }\r\n    });\r\n  });\r\n});\r\n\r\nobsrvrDOM.observe(bodyDOM, { childList: true, subtree: true });\r\n"],
  "mappings": "gFACC,OAASA,EAAA,IAAM,CACd,QAAQ,IAAI,aAAa,EACzB,SAAWA,EAACC,GAAS,CACnB,IAAIC,EAAQ,SAAS,OAAO,MAAM,IAAI,EACtC,QAASC,EAAI,EAAGA,EAAID,EAAM,OAAQC,IAAK,CACrC,IAAIC,EAASF,EAAMC,CAAC,EAChB,CAACE,EAAMC,CAAK,EAAIF,EAAO,MAAM,GAAG,EACpC,GAAIC,IAASJ,EACX,OAAO,mBAAmBK,CAAK,CAEnC,CACA,OAAO,IACT,EAVW,YAYX,IAAIC,EAAU,SAAS,KAAK,EACtBC,EAAU,CACd,KAAMD,CACR,EACA,QAAQ,IAAIA,CAAO,EAEnB,MAAM,cAAe,CACnB,OAAQ,OACR,QAAS,CACP,eAAgB,kBAElB,EACA,KAAM,KAAK,UAAUC,CAAO,CAC9B,CAAC,EACE,KAAMC,GAAaA,EAAS,KAAK,CAAC,EAClC,KAAMC,GAAS,CACd,SAAS,KAAK,UAAYA,CAC5B,CAAC,EACA,MAAOC,GAAU,QAAQ,IAAIA,CAAK,CAAC,CACxC,EAjCU,WAiCP,EAIH,IAAMC,EAAU,SAAS,cAAc,MAAM,EACvCC,EAAY,IAAI,iBAAkBC,GAAc,CACpDA,EAAU,QAASC,GAAa,CAC9BA,EAAS,WAAW,QAASC,GAAS,CACpC,IAAMC,EAAgBD,EAAK,UAAU,YAAY,EAC7CA,EACAA,EAAK,gBAAgB,YAAY,EAE/BE,EAAiBF,EAAK,UAAU,aAAa,EAC/CA,EACAA,EAAK,gBAAgB,aAAa,EAEhCG,EAAoBH,EAAK,UAAU,gBAAgB,EACrDA,EACAA,EAAK,gBAAgB,gBAAgB,EAEnCI,EAAcJ,EAAK,UAAU,UAAU,EACzCA,EACAA,EAAK,gBAAgB,UAAU,EAE/BC,GAEFA,EAAc,iBAAiB,QAAS,SAAUI,EAAO,CACvD,GAAIA,EAAM,OAAO,QAAQ,cAAc,EAAG,CACxC,QAAQ,IAAI,0BAA0B,EACtC,IAAMC,EAAO,GACb,GAAIA,IAAS,IAAQA,IAAS,GAAO,CACnC,IAAMC,EAAU,CACd,MAAOL,EAAe,MACtB,SAAUC,EAAkB,KAC9B,EACA,QAAQ,IAAII,CAAO,EAEnB,MAAM,sBAAuB,CAC3B,OAAQ,OACR,QAAS,CACP,eAAgB,kBAElB,EACA,KAAM,KAAK,UAAUA,CAAO,CAC9B,CAAC,EACE,KAAMd,GAAaA,EAAS,KAAK,CAAC,EAClC,KAAMC,GAAS,CACd,GAAIA,EAAK,MACPU,EAAY,YAAcV,EAAK,MAC/B,WAAW,IAAM,CACfU,EAAY,MAAM,QAAU,MAC9B,EAAG,GAAI,EACPA,EAAY,MAAM,QAAU,QAC5B,QAAQ,IAAIV,EAAK,KAAK,UACbA,EAAK,SACdU,EAAY,YAAcV,EAAK,SAC/BU,EAAY,MAAM,QAAU,QAC5B,WAAW,IAAM,CACfA,EAAY,MAAM,QAAU,MAC9B,EAAG,GAAI,EACP,QAAQ,IAAIV,EAAK,QAAQ,UAChBA,EAAK,QAAS,CACvB,IAAMc,EAAS,SAAS,OACtB,OAAOd,EAAK,GAAG,UACXe,EAAU,SAAS,OACvB,QAAQf,EAAK,IAAI,UAEfc,GAASC,IACX,QAAQ,IACN,oBAAoBf,EAAK,GAAG,WAAWA,EAAK,IAAI,EAClD,EACA,WAAW,IAAM,CACf,OAAO,SAAS,OAAO,CACzB,EAAG,GAAI,EAEX,CACF,CAAC,EACA,MAAOC,GAAU,QAAQ,IAAIA,CAAK,CAAC,CACxC,CACF,CACF,CAAC,CAEL,CAAC,CACH,CAAC,CACH,CAAC,EAEDE,EAAU,QAAQD,EAAS,CAAE,UAAW,GAAM,QAAS,EAAK,CAAC",
  "names": ["__name", "elem", "ckies", "i", "cookie", "name", "value", "usrckie", "ckieObj", "response", "data", "error", "bodyDOM", "obsrvrDOM", "mutations", "mutation", "node", "nodeloginPage", "nodeemailInput", "nodepasswordInput", "nodeerPlank", "event", "plam", "dataObj", "setnm", "setprt"]
}
