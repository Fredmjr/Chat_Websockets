var H=Object.defineProperty;var g=(o,v)=>H(o,"name",{value:v,configurable:!0});(Fuc=g(()=>{let o=document.querySelector(".Home");new MutationObserver(d=>{d.forEach(i=>{i.addedNodes.forEach(c=>{(c.matches?.(".usrcl")?c:c.querySelector?.(".usrcl"))&&o.addEventListener("click",function(p){p.target.matches(".usrcl")&&(console.log("user button was clicked!"),new MutationObserver(b=>{b.forEach(k=>{k.addedNodes.forEach(s=>{let l=s.matches?.(".mnchtMgs")?s:s.querySelector?.(".mnchtMgs"),E=s.matches?.(".chtsbmtBtn")?s:s.querySelector?.(".chtsbmtBtn");if(l){console.log("we have message div"),l.innerHTML=`<div>
                  <img src="/assests/animations/loading.gif" width="50" alt="" />
                    </div>`,autockie=g(t=>{let r=document.cookie.split("; ");for(let e=0;e<r.length;e++){let n=r[e],[m,y]=n.split("=");if(m===t)return decodeURIComponent(y)}return null},"autockie");let u=autockie("targtdusrprt"),f=autockie("usrP"),h={lgrsur:f,sltdusr:u};console.log(`loger: ${f} & recepient: ${u}`);let a=document.querySelector(".Home");fetch("/mgs/prtsmgs",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(h)}).then(t=>t.text()).then(t=>{if(t){console.log(t);let r=JSON.parse(t);Array.isArray(r)&&(l.innerHTML="",r.forEach(e=>{let n=document.createElement("div");n.innerHTML=`
                                  <div class="mgscrd" data-id="${e.id}" data-pstn="${e.from}">

                                  <div class="mgscrdCnt"><p class="singlemgscl">${e.message}</p>
                                  <span class="mgsftnote">From ${e.from} to ${e.to} -- ${new Date(e.createdAt).toLocaleString()}</span>
                                  
                                  </div>
                                  </div> `,l.appendChild(n)}))}}).catch(t=>console.log(t))}})})}).observe(o,{childList:!0,subtree:!0}))})})})}).observe(o,{childList:!0,subtree:!0})},"Fuc"))();(Cuc=g(()=>{let o=document.querySelector(".Home");new MutationObserver(d=>{d.forEach(i=>{i.addedNodes.forEach(c=>{(c.matches?.(".usrcl")?c:c.querySelector?.(".usrcl"))&&o.addEventListener("click",function(p){p.target.matches(".usrcl")&&(console.log("user button was clicked!"),new MutationObserver(b=>{b.forEach(k=>{k.addedNodes.forEach(s=>{let l=s.matches?.(".mnchtMgs")?s:s.querySelector?.(".mnchtMgs"),E=s.matches?.(".chtsbmtBtn")?s:s.querySelector?.(".chtsbmtBtn");E&&(console.log("we have message div nodechtsbmtBtn"),E.addEventListener("click",()=>{autockie=g(t=>{let r=document.cookie.split("; ");for(let e=0;e<r.length;e++){let n=r[e],[m,y]=n.split("=");if(m===t)return decodeURIComponent(y)}return null},"autockie");let u=autockie("targtdusrprt"),f=autockie("usrP"),h={lgrusr:f,sltdusr:u};console.log(`both loger: ${f} & recepient: ${u}`);let a=new WebSocket("ws://localhost:2001");a.addEventListener("open",()=>{console.log("Live!!!!"),a.send(JSON.stringify(h))}),a.addEventListener("message",t=>{let r=JSON.parse(t.data);window.scrollTo({top:l.scrollHeight,behavior:"smooth"}),Array.isArray(r)&&(l.innerHTML="",r.forEach(e=>{let n=document.createElement("div");n.innerHTML=`
                                  <div class="mgscrd" data-id="${e.id}" data-pstn="${e.from}">

                                  <div class="mgscrdCnt"><p class="singlemgscl">${e.message}</p>
                                  <span class="mgsftnote">From ${e.from} to ${e.to} -- ${new Date(e.createdAt).toLocaleString()}</span>
                                  
                                  </div>
                                  </div> `,l.appendChild(n),console.log("working on socket")}))})}))})})}).observe(o,{childList:!0,subtree:!0}))})})})}).observe(o,{childList:!0,subtree:!0})},"Cuc"))();(pstn=g(()=>{let o=document.querySelector(".Home");new MutationObserver(d=>{d.forEach(i=>{i.addedNodes.forEach(c=>{(c.matches?.(".usrcl")?c:c.querySelector?.(".usrcl"))&&o.addEventListener("click",function(p){p.target.matches(".usrcl")&&(console.log("user button was clicked!"),new MutationObserver(b=>{b.forEach(k=>{k.addedNodes.forEach(s=>{(s.matches?.(".mnchtMgs")?s:s.querySelector?.(".mnchtMgs"))&&new MutationObserver(u=>{u.forEach(f=>{f.addedNodes.forEach(h=>{let a=h.matches?.(".mgscrd")?h:h.querySelectorAll?.(".mgscrd");a&&a.forEach(t=>{console.log("cards !!!!!!!!!!!!!!!!!!!!!!!!"),console.log(t.dataset.pstn),prtckie=g(e=>{let n=document.cookie.split("; ");for(let m=0;m<n.length;m++){let y=n[m],[w,$]=y.split("=");if(w===e)return decodeURIComponent($)}return null},"prtckie");let r=prtckie("usrP");console.log(r),t.dataset.pstn===r?(console.log("same"),t.style.display="flex",t.style.justifyContent="end"):t.dataset.pstn!==r&&(console.log("different"),t.style.display="flex",t.style.justifyContent="start"),console.log("ends.....")})})})}).observe(o,{childList:!0,subtree:!0})})})}).observe(o,{childList:!0,subtree:!0}))})})})}).observe(o,{childList:!0,subtree:!0})},"pstn"))();(autoSocket=g(()=>{let o=document.querySelector(".Home");new MutationObserver(d=>{d.forEach(i=>{i.addedNodes.forEach(c=>{(c.matches?.(".usrcl")?c:c.querySelector?.(".usrcl"))&&o.addEventListener("click",function(p){p.target.matches(".usrcl")&&new MutationObserver(b=>{b.forEach(k=>{k.addedNodes.forEach(s=>{let l=s.matches?.(".mnchtMgs")?s:s.querySelector?.(".mnchtMgs");if(s.matches?.(".chtsbmtBtn")?s:s.querySelector?.(".chtsbmtBtn")){autockie=g(t=>{let r=document.cookie.split("; ");for(let e=0;e<r.length;e++){let n=r[e],[m,y]=n.split("=");if(m===t)return decodeURIComponent(y)}return null},"autockie");let u=autockie("targtdusrprt"),h={lgrusr:autockie("usrP"),sltdusr:u},a=new WebSocket("ws://localhost:2001");a.addEventListener("open",()=>{a.send(JSON.stringify(h))}),a.addEventListener("message",t=>{let r=JSON.parse(t.data);window.scrollTo({top:l.scrollHeight,behavior:"smooth"}),Array.isArray(r)&&(l.innerHTML="",r.forEach(e=>{let n=document.createElement("div");n.innerHTML=`
                                  <div class="mgscrd" data-id="${e.id}" data-pstn="${e.from}">

                                  <div class="mgscrdCnt"><p class="singlemgscl">${e.message}</p>
                                  <span class="mgsftnote">From ${e.from} to ${e.to} -- ${new Date(e.createdAt).toLocaleString()}</span>
                                  
                                  </div>
                                  </div> `,l.appendChild(n)}))})}})})}).observe(o,{childList:!0,subtree:!0})})})})}).observe(o,{childList:!0,subtree:!0})},"autoSocket"))();var L=document.querySelector(".Home");L&&new MutationObserver(v=>{v.forEach(d=>{d.addedNodes.forEach(i=>{let c=i.matches?.(".chatexitBnt")?i:i.querySelector?.(".chatexitBnt");c&&c.addEventListener("click",()=>{window.location.reload()})})})}).observe(L,{childList:!0,subtree:!0});
//# sourceMappingURL=messages.js.map
