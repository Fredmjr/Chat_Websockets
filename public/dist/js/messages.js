var $=Object.defineProperty;var h=(o,y)=>$(o,"name",{value:y,configurable:!0});(Fuc=h(()=>{let o=document.querySelector(".Home");new MutationObserver(g=>{g.forEach(p=>{p.addedNodes.forEach(n=>{(n.matches?.(".usrcl")?n:n.querySelector?.(".usrcl"))&&o.addEventListener("click",function(f){f.target.matches(".usrcl")&&(console.log("user button was clicked!"),new MutationObserver(v=>{v.forEach(b=>{b.addedNodes.forEach(s=>{let l=s.matches?.(".mnchtMgs")?s:s.querySelector?.(".mnchtMgs"),M=s.matches?.(".chtsbmtBtn")?s:s.querySelector?.(".chtsbmtBtn");if(l){console.log("we have message div"),l.innerHTML=`<div>
                  <img src="/assests/animations/loading.gif" width="50" alt="" />
                    </div>`,autockie=h(t=>{let r=document.cookie.split("; ");for(let e=0;e<r.length;e++){let c=r[e],[u,k]=c.split("=");if(u===t)return decodeURIComponent(k)}return null},"autockie");let a=autockie("targtdusrprt"),m=autockie("usrP"),d={lgrsur:m,sltdusr:a};console.log(`loger: ${m} & recepient: ${a}`);let i=document.querySelector(".Home");fetch("/mgs/prtsmgs",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(d)}).then(t=>t.text()).then(t=>{if(t){console.log(t);let r=JSON.parse(t);Array.isArray(r)&&(l.innerHTML="",r.forEach(e=>{let c=document.createElement("div");c.innerHTML=`
                                  <div class="mgscrd" data-id="${e.id}" data-pstn="${e.from}">

                                  <div class="mgscrdCnt"><p class="singlemgscl">${e.message}</p>
                                  <span class="mgsftnote">From ${e.from} to ${e.to} -- ${new Date(e.createdAt).toLocaleString()}</span>
                                  
                                  </div>
                                  </div> `,l.appendChild(c)}))}}).catch(t=>console.log(t))}})})}).observe(o,{childList:!0,subtree:!0}))})})})}).observe(o,{childList:!0,subtree:!0})},"Fuc"))();(Cuc=h(()=>{let o=document.querySelector(".Home");new MutationObserver(g=>{g.forEach(p=>{p.addedNodes.forEach(n=>{(n.matches?.(".usrcl")?n:n.querySelector?.(".usrcl"))&&o.addEventListener("click",function(f){f.target.matches(".usrcl")&&(console.log("user button was clicked!"),new MutationObserver(v=>{v.forEach(b=>{b.addedNodes.forEach(s=>{let l=s.matches?.(".mnchtMgs")?s:s.querySelector?.(".mnchtMgs"),M=s.matches?.(".chtsbmtBtn")?s:s.querySelector?.(".chtsbmtBtn");M&&(console.log("we have message div nodechtsbmtBtn"),M.addEventListener("click",()=>{autockie=h(t=>{let r=document.cookie.split("; ");for(let e=0;e<r.length;e++){let c=r[e],[u,k]=c.split("=");if(u===t)return decodeURIComponent(k)}return null},"autockie");let a=autockie("targtdusrprt"),m=autockie("usrP"),d={lgrusr:m,sltdusr:a};console.log(`both loger: ${m} & recepient: ${a}`);let i=new WebSocket("ws://localhost:2001");i.addEventListener("open",()=>{console.log("Live!!!!"),i.send(JSON.stringify(d))}),i.addEventListener("message",t=>{let r=JSON.parse(t.data);window.scrollTo({top:l.scrollHeight,behavior:"smooth"}),Array.isArray(r)&&(l.innerHTML="",r.forEach(e=>{let c=document.createElement("div");c.innerHTML=`
                                  <div class="mgscrd" data-id="${e.id}" data-pstn="${e.from}">

                                  <div class="mgscrdCnt"><p class="singlemgscl">${e.message}</p>
                                  <span class="mgsftnote">From ${e.from} to ${e.to} -- ${new Date(e.createdAt).toLocaleString()}</span>
                                  
                                  </div>
                                  </div> `,l.appendChild(c),console.log("working on socket")}))})}))})})}).observe(o,{childList:!0,subtree:!0}))})})})}).observe(o,{childList:!0,subtree:!0})},"Cuc"))();(pstn=h(()=>{let o=document.querySelector(".Home");new MutationObserver(g=>{g.forEach(p=>{p.addedNodes.forEach(n=>{(n.matches?.(".usrcl")?n:n.querySelector?.(".usrcl"))&&o.addEventListener("click",function(f){f.target.matches(".usrcl")&&(console.log("user button was clicked!"),new MutationObserver(v=>{v.forEach(b=>{b.addedNodes.forEach(s=>{(s.matches?.(".mnchtMgs")?s:s.querySelector?.(".mnchtMgs"))&&new MutationObserver(a=>{a.forEach(m=>{m.addedNodes.forEach(d=>{let i=d.matches?.(".mgscrd")?d:d.querySelectorAll?.(".mgscrd");i&&i.forEach(t=>{console.log("cards !!!!!!!!!!!!!!!!!!!!!!!!"),console.log(t.dataset.pstn),prtckie=h(e=>{let c=document.cookie.split("; ");for(let u=0;u<c.length;u++){let k=c[u],[L,w]=k.split("=");if(L===e)return decodeURIComponent(w)}return null},"prtckie");let r=prtckie("usrP");console.log(r),t.dataset.pstn===r?(console.log("same"),t.style.display="flex",t.style.justifyContent="end"):t.dataset.pstn!==r&&(console.log("different"),t.style.display="flex",t.style.justifyContent="start"),console.log("ends.....")})})})}).observe(o,{childList:!0,subtree:!0})})})}).observe(o,{childList:!0,subtree:!0}))})})})}).observe(o,{childList:!0,subtree:!0})},"pstn"))();(autoSocket=h(()=>{let o=document.querySelector(".Home");new MutationObserver(g=>{g.forEach(p=>{p.addedNodes.forEach(n=>{(n.matches?.(".usrcl")?n:n.querySelector?.(".usrcl"))&&o.addEventListener("click",function(f){f.target.matches(".usrcl")&&new MutationObserver(v=>{v.forEach(b=>{b.addedNodes.forEach(s=>{let l=s.matches?.(".mnchtMgs")?s:s.querySelector?.(".mnchtMgs");if(s.matches?.(".chtsbmtBtn")?s:s.querySelector?.(".chtsbmtBtn")){autockie=h(t=>{let r=document.cookie.split("; ");for(let e=0;e<r.length;e++){let c=r[e],[u,k]=c.split("=");if(u===t)return decodeURIComponent(k)}return null},"autockie");let a=autockie("targtdusrprt"),d={lgrusr:autockie("usrP"),sltdusr:a},i=new WebSocket("ws://localhost:2001");i.addEventListener("open",()=>{i.send(JSON.stringify(d))}),i.addEventListener("message",t=>{let r=JSON.parse(t.data);window.scrollTo({top:l.scrollHeight,behavior:"smooth"}),Array.isArray(r)&&(l.innerHTML="",r.forEach(e=>{let c=document.createElement("div");c.innerHTML=`
                                  <div class="mgscrd" data-id="${e.id}" data-pstn="${e.from}">

                                  <div class="mgscrdCnt"><p class="singlemgscl">${e.message}</p>
                                  <span class="mgsftnote">From ${e.from} to ${e.to} -- ${new Date(e.createdAt).toLocaleString()}</span>
                                  
                                  </div>
                                  </div> `,l.appendChild(c)}))})}})})}).observe(o,{childList:!0,subtree:!0})})})})}).observe(o,{childList:!0,subtree:!0})},"autoSocket"))();
//# sourceMappingURL=messages.js.map
